<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- 基于XML方式来配置ioc 通过set方法进行注入-->
    <!--name属性可设置多个别名-->
    <bean class="cxc.entity.UserOne" id="user" name="user2 user3">
        <description>定义一个Bean的描述</description>
        <!--该标签通过类属性的set方法进行值的设置，如未定义set方法将报错-->
        <property name="age" value="10"/>
        <!--name属性的值根据set方法来对应，去掉"set"后使用小驼峰来定义-->
        <property name="myName" value="cxc"/>
    </bean>
    <!--用来为bean定义别名等同于name属性-->
    <alias name="user" alias="anotherNameOfUserClass"/>

    <!--基于构造函数的注入 需根据所定义的构造函数将所有值全部注入，否则会报错 -->
    <bean class="cxc.entity.UserOne" id="user4">
        <constructor-arg name="name">
            <!--定义值为null-->
            <null/>
        </constructor-arg>
        <!--
        定义值为空
        当定义的值为其他类型的对象-通过ref属性引用所引用类型的id名称
        当定义的类型为List，通过<List>标签新型定义（标签内用value或bean）
        当定义的类型为Map时，通过entry标签定义key和value（通过value-ref引用bean定义）
        -->
        <constructor-arg name="age" value="1"/>
    </bean>

    <!--命名空间需要引入，详情看文件头部分（xmlns）不支持List、Map，需使用标签进行组合使用-->
    <!--通过p命名空间简化以Set方式来注入对象-->
    <bean class="cxc.entity.UserOne" id="user5" p:age="18" p:myName="theP"/>
    <!--通过c命名空间简化以构造函数来注入对象-->
    <bean class="cxc.entity.UserOne" id="user6" c:age="18" c:name="theC"/>

</beans>